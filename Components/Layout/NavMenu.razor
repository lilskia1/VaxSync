@* Components/Layout/NavMenu.razor *@
@using MudBlazor
@using Microsoft.AspNetCore.Components.Authorization

@if (!_isInteractive)
{
    <nav class="vx-nav-fallback">
        <a class="vx-nav-link" href="/">Home</a>
        <a class="vx-nav-link" href="/about">About</a>
        <a class="vx-nav-link" href="/student-lookup">Student Lookup</a>
        <a class="vx-nav-link" href="/dashboard">Dashboard</a>
        <a class="vx-nav-link" href="/Account/Login">Sign in</a>
    </nav>
}
else
{
    <MudNavMenu Dense="true">
        <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">
            Home
        </MudNavLink>
        <MudNavLink Href="/about" Icon="@Icons.Material.Filled.Info">
            About
        </MudNavLink>
        <MudNavLink Href="/student-lookup" Icon="@Icons.Material.Filled.Search">
            Student Lookup
        </MudNavLink>

        <AuthorizeView>
            <Authorized Context="authState">
                <MudNavGroup Icon="@Icons.Material.Filled.Dashboard" Text="Dashboards" Expanded="true">
                    <MudNavLink Href="/dashboard" Icon="@Icons.Material.Filled.DashboardCustomize">
                        My Dashboard
                    </MudNavLink>
                    @if (authState.User.IsInRole("Admin"))
                    {
                        <MudNavLink Href="/admin-dashboard" Icon="@Icons.Material.Filled.AdminPanelSettings">
                            Admin Dashboard
                        </MudNavLink>
                    }
                    @if (authState.User.IsInRole("SchoolNurse"))
                    {
                        <MudNavLink Href="/nurse-dashboard" Icon="@Icons.Material.Filled.MedicalServices">
                            Nurse Dashboard
                        </MudNavLink>
                    }
                    @if (authState.User.IsInRole("Viewer"))
                    {
                        <MudNavLink Href="/viewer-dashboard" Icon="@Icons.Material.Filled.Visibility">
                            Viewer Dashboard
                        </MudNavLink>
                    }
                </MudNavGroup>

                <MudNavLink Href="/Account/Logout" Icon="@Icons.Material.Filled.Logout">
                    Sign out
                </MudNavLink>
            </Authorized>
            <NotAuthorized>
                <MudNavLink Href="/Account/Login" Icon="@Icons.Material.Filled.Login">
                    Sign in
                </MudNavLink>
            </NotAuthorized>
        </AuthorizeView>

        <MudNavLink Href="/ping" Icon="@Icons.Material.Filled.HealthAndSafety">
            System Health
        </MudNavLink>
    </MudNavMenu>
}

@code {
    private bool _isInteractive;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isInteractive = true;
            StateHasChanged();
        }

        await base.OnAfterRenderAsync(firstRender);
    }
}
